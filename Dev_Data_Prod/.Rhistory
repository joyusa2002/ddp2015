install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
install.packages("RCurl")
devtools::install_github('rstudio/shinyapps')
install.packages(c('ggplot2', 'shiny'))
function(input, output) {
dataset <- reactive({
diamonds[sample(nrow(diamonds), input$sampleSize),]
})
output$plot <- renderPlot({
p <- ggplot(dataset(), aes_string(x=input$x, y=input$y)) + geom_point()
if (input$color != 'None')
p <- p + aes_string(color=input$color)
facets <- paste(input$facet_row, '~', input$facet_col)
if (facets != '. ~ .')
p <- p + facet_grid(facets)
if (input$jitter)
p <- p + geom_jitter()
if (input$smooth)
p <- p + geom_smooth()
print(p)
}, height=700)
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='joymehta',
token='2E3FFC387120E1B2CA0F78B341D02185',
secret='<SECRET>')
shinyapps::setAccountInfo(name='joymehta',
token='2E3FFC387120E1B2CA0F78B341D02185',
secret='<SECRET>')
shinyapps::setAccountInfo(name='joymehta',token='2E3FFC387120E1B2CA0F78B341D02185',secret='<SECRET>')
library(shinyapps)
shinyapps::deployApp('path/to/your/app')
library(shinyapps)
shinyapps::deployApp('path/to/your/app')
shiny::runApp()
install_github("slidify")
install_github("slidify", "")
install_github("slidify", "ramnathv")
library(devtools)
install_github("slidify", "ramnathv")
library(slidify)
install_github("slidifyLibraries", "ramnathv")
getwd()
author("Joy_App")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
## Slide 3
## Introduction
1. Edit YAML front matter
2. Write using R Markdown
3. Use an empty line followed by three dashes to separate slides
--- .class #id
## Slide 2
You can create histograms with the function hist(x) where x is a numeric vector of values to be plotted. The option freq=FALSE plots probability densities instead of frequencies. The option breaks= controls the number of bins.
--- .class #id
## Slide 3
--- .class #id
---
library(slidify)
install_github("slidifyLibraries")
getwd
---
title: "Developing Data Product App"
author: "Joy Mehta"
highlighter: highlight.js
output: html_document
job: Consultant
knit: slidify::knit2slides
mode: selfcontained
hitheme: tomorrow
subtitle: Interactive Histogram
framework: io2012
widgets: []
---
## Introduction
1. Edit YAML front matter
2. Write using R Markdown
3. Use an empty line followed by three dashes to separate slides
--- .class #id
## Slide 2
You can create histograms with the function hist(x) where x is a numeric vector of values to be plotted. The option freq=FALSE plots probability densities instead of frequencies. The option breaks= controls the number of bins.
--- .class #id
## Slide 3
--- .class #id
shiny::runApp()
---
title: "Developing Data Product App"
author: "Joy Mehta"
highlighter: highlight.js
output: html_document
job: Consultant
knit: slidify::knit2slides
mode: selfcontained
hitheme: tomorrow
subtitle: Interactive Histogram
framework: io2012
widgets: []
---
## Introduction (2)
1. Edit YAML front matter
2. Write using R Markdown
3. Use an empty line followed by three dashes to separate slides
--- .class #id
## Slide (3)
You can create histograms with the function hist(x) where x is a numeric vector of values to be plotted. The option freq=FALSE plots probability densities instead of frequencies. The option breaks= controls the number of bins.
--- .class #id
## Slide (4)
--- .class #id
## slide (5)
--- .class #id
BrowseURL("index.html")
index.Rmd
slidify("index.Rmd")
library(slidify)
install_github("slidifyLibraries")
getwd
shiny::runApp
author(Joy_App)
author(joy_App)
browseURL("index.html")
slidify("index.html")
slidify("Index.html")
install_github("ramnathv"/"slidifyLibraries")
library(slidify)
setwd("Joy_App")
author("Joy_Mehta")
slidify('index.Rmd')
library(slidify)
author ('Joy Mehta')
browseURL('index.html')
library(slidify)
author("Joy Mehta")
library(slidify)
slidify('index.Rmd')
library(slidify)
shiny::runApp('C:/Users/Mehta/Dev_Data_Prod')
library(slidify)
author("Joy Mehta")
slidify('index.Rmd')
browseURL('index.html')
shiny::runApp('C:/Users/Mehta/Dev_Data_Prod')
getwd()
slidify('index.Rmd')
browseURL('index.html')
shiny::runApp()
author("Shiny_Assignment")
lirary(slidify)
library(slidify)
author("Shiny_Assignment")
slidify("index.Rmd")
getwd()
library(slidify)
author("Joy_App")
slidify("index.Rmd")
slidify("index.Rmd", encoding="Windows-1252")
install_github('ramnathv/slidify', ref = github_pull(425))
library(devtools)
install_github('ramnathv/slidify', ref = github_pull(425))
install_github('slidifyLibraries','ramnathv')
author("JoyAssignment")
slidify("index.Rmd")
browseURL(index.html)
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
getwd()
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
publish_gihub("joyusa2002","ddp2015")
publish_github("joyusa2002","ddp2015")
publish_gihub("joyusa2002","ddp2015")
publish_github("joyusa2002","ddp2015")
shiny::runApp('C:/Users/Mehta/Dev_Data_Prod')
library(shinyapps)
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
getwd
getwd()
shinyapps::deployApp('C:/Users/Mehta/Dev_Data_Prod/Joy_App')
shinyapps::deployApp('C:/Users/Mehta/Dev_Data_Prod')
setAcountInfo
?setAcountInfo
shinyapps::deployApp('C:/Users/Mehta/Dev_Data_Prod')
shinyapps::setAccountInfo(name='jmehta', token='B9105E91DF7040DA1851C1F7ABEAF0B8', secret='RcXCCuMw+x/GLlOPbxLwoBos7HLYFs4j1nYzTLeQ')
shinyapps::deployApp('C:/Users/Mehta/Dev_Data_Prod')
shiny::runApp('C:/Users/Mehta/Dev_Data_Prod')
shinyapps::deployApp('C:/Users/Mehta/Dev_Data_Prod')
